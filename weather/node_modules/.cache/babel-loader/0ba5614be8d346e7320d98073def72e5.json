{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\weather\\\\src\\\\components\\\\Title.js\";\nimport React from 'react';\nimport ReactCountryFlag from \"react-country-flag\";\nimport { Link } from \"react-router-dom\";\nimport Display from \"./Display\";\nvar API_KEY = \"82e89009629e31d94b5e0e6bc9b6533b\";\n\nvar Title =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Title, _React$Component);\n\n  function Title() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Title);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Title)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeTemp: []\n    };\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var cities, city_temp, i, req, temperature;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              cities = [\"Bangalore\", \"Nairobi\", \"Stockholm\"];\n              city_temp = [];\n              i = 0;\n\n            case 3:\n              if (!(i < cities.length)) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 6;\n              return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(cities[i], \"&appid=\").concat(API_KEY, \"&units=metric\"));\n\n            case 6:\n              req = _context.sent;\n              _context.next = 9;\n              return req.json();\n\n            case 9:\n              temperature = _context.sent;\n              city_temp.push(temperature.main.temp);\n\n            case 11:\n              i++;\n              _context.next = 3;\n              break;\n\n            case 14:\n              _this.setState({\n                activeTemp: city_temp\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _this;\n  }\n\n  _createClass(Title, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"title-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0Please click on the city know the weather in detail\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(Display, {\n        className: \"city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(ReactCountryFlag, {\n        styleProps: {\n          width: '20px',\n          height: '20px'\n        },\n        className: \"country\",\n        code: \"in\",\n        svg: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), \"\\xA0\\xA0\", React.createElement(Link, {\n        to: {\n          pathname: \"/temp/bangalore\",\n          state: {\n            city: \"bangalore\"\n          }\n        },\n        className: \"city\",\n        style: {\n          textDecoration: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Bangalore, India \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(\"img\", {\n        src: \"https://cdn3.iconfinder.com/data/icons/bebreezee-weather-symbols/690/icon-weather-sunrainheavy-512.png\",\n        width: \"30\",\n        height: \"30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), this.state.activeTemp[0], \" \\xB0C\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(ReactCountryFlag, {\n        styleProps: {\n          width: '20px',\n          height: '20px'\n        },\n        className: \"country\",\n        code: \"ke\",\n        svg: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), \"\\xA0\\xA0\", React.createElement(Link, {\n        to: {\n          pathname: \"/temp/nairobi\",\n          state: {\n            city: \"nairobi\"\n          }\n        },\n        className: \"city\",\n        style: {\n          textDecoration: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Nairobi, Kenya \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(\"img\", {\n        src: \"https://cdn3.iconfinder.com/data/icons/bebreezee-weather-symbols/690/icon-weather-sunrainheavy-512.png\",\n        width: \"30\",\n        height: \"30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), this.state.activeTemp[1], \" \\xB0C\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(ReactCountryFlag, {\n        styleProps: {\n          width: '20px',\n          height: '20px'\n        },\n        className: \"country\",\n        code: \"se\",\n        svg: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), \"\\xA0\\xA0\", React.createElement(Link, {\n        to: {\n          pathname: \"/temp/stockholm\",\n          state: {\n            city: \"stockholm\"\n          }\n        },\n        className: \"city\",\n        style: {\n          textDecoration: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Stockholm, Sweden \\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(\"img\", {\n        src: \"https://cdn3.iconfinder.com/data/icons/bebreezee-weather-symbols/690/icon-weather-sunrainheavy-512.png\",\n        width: \"30\",\n        height: \"30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), this.state.activeTemp[2], \" \\xB0C\"));\n    }\n  }]);\n\n  return Title;\n}(React.Component);\n\nexport default Title;","map":{"version":3,"sources":["D:\\weather\\src\\components\\Title.js"],"names":["React","ReactCountryFlag","Link","Display","API_KEY","Title","state","activeTemp","componentDidMount","cities","city_temp","i","length","fetch","req","json","temperature","push","main","temp","setState","width","height","pathname","city","textDecoration","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactCountryFlag from \"react-country-flag\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Display from \"./Display\";\r\n\r\nconst API_KEY = \"82e89009629e31d94b5e0e6bc9b6533b\";\r\n\r\n\r\nclass Title extends React.Component {\r\n  \r\n  state = {\r\n    activeTemp:[]\r\n  }\r\n  \r\n  componentDidMount = async () => {    \r\n    var cities = [\"Bangalore\", \"Nairobi\", \"Stockholm\"];\r\n    var city_temp = [];\r\n    for(var i=0;i<cities.length;i++){\r\n      // push the component to elements!\r\n      const req = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${cities[i]}&appid=${API_KEY}&units=metric`);\r\n      const temperature = await req.json();\r\n      city_temp.push( temperature.main.temp )\r\n    }     \r\n    this.setState({activeTemp:city_temp});\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"title-container\"> \r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      \r\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Please click on the city know the weather in detail\r\n      <br></br>\r\n      <br></br>\r\n      \r\n      <Display className=\"city\"/>\r\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n      <ReactCountryFlag styleProps={{width: '20px',height: '20px'}} className=\"country\" code=\"in\" svg/>\r\n      &nbsp;&nbsp;\r\n        <Link to={{ pathname: `/temp/bangalore`, state :{city:\"bangalore\"} }}\r\n        className=\"city\" \r\n        style={{ textDecoration: 'none' }} >\r\n        Bangalore, India &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"https://cdn3.iconfinder.com/data/icons/bebreezee-weather-symbols/690/icon-weather-sunrainheavy-512.png\" width=\"30\" height=\"30\"></img> \r\n       {this.state.activeTemp[0]} &deg;C\r\n        </Link>  \r\n      <br></br>\r\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n      <ReactCountryFlag styleProps={{width: '20px',height: '20px'}} className=\"country\" code=\"ke\" svg/>\r\n      &nbsp;&nbsp;\r\n        <Link to={{ pathname: `/temp/nairobi`, state :{city:\"nairobi\"} }}  \r\n            className=\"city\" \r\n            style={{ textDecoration: 'none' }}>\r\n        Nairobi, Kenya &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"https://cdn3.iconfinder.com/data/icons/bebreezee-weather-symbols/690/icon-weather-sunrainheavy-512.png\" width=\"30\" height=\"30\"></img> \r\n        {this.state.activeTemp[1]} &deg;C\r\n        </Link>  \r\n      <br></br>\r\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n      <ReactCountryFlag styleProps={{width: '20px',height: '20px'}} className=\"country\" code=\"se\" svg/>\r\n      &nbsp;&nbsp;\r\n        <Link to={{ pathname: `/temp/stockholm`, state :{city:\"stockholm\"} }}\r\n        className=\"city\" \r\n        style={{ textDecoration: 'none' }}>\r\n          Stockholm, Sweden &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"https://cdn3.iconfinder.com/data/icons/bebreezee-weather-symbols/690/icon-weather-sunrainheavy-512.png\" width=\"30\" height=\"30\"></img> \r\n           {this.state.activeTemp[2]} &deg;C\r\n        </Link>  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Title;\r\n"]},"metadata":{},"sourceType":"module"}