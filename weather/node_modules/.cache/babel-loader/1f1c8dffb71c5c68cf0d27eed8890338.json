{"ast":null,"code":"import _classCallCheck from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\weather\\\\src\\\\components\\\\DetailWeather.js\";\nimport React from 'react';\nimport Maps from \"./components/Maps\";\nimport \"./App.css\";\nvar location = {\n  name: this.props.city,\n  lat: this.props.lat,\n  lng: this.props.lon\n};\n\nvar DetailWeather =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DetailWeather, _React$Component);\n\n  function DetailWeather() {\n    var _this;\n\n    _classCallCheck(this, DetailWeather);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DetailWeather).call(this));\n    _this.createInfoWindow = _this.createInfoWindow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DetailWeather, [{\n    key: \"createInfoWindow\",\n    value: function createInfoWindow(e, map) {\n      var infoWindow = new window.google.maps.InfoWindow({\n        content: '<div id=\"infoWindow\" />',\n        position: {\n          lat: e.latLng.lat(),\n          lng: e.latLng.lng()\n        }\n      });\n      infoWindow.addListener('domready', function (e) {\n        render(React.createElement(InfoWindow, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }), document.getElementById('infoWindow'));\n      });\n      infoWindow.open(map);\n    }\n    /**use async to make htttp call very easy* */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(Map, {\n        id: \"myMap\",\n        options: {\n          center: {\n            lat: location.lat,\n            lng: location.lon\n          },\n          zoom: 8\n        },\n        onMapLoad: function onMapLoad(map) {\n          var marker = new window.google.maps.Marker({\n            position: {\n              lat: location.lat,\n              lng: location.lon\n            },\n            map: map,\n            title: 'Hello Istanbul!'\n          });\n          marker.addListener('click', function (e) {\n            _this2.createInfoWindow(e, map);\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), this.props.city);\n    }\n  }]);\n\n  return DetailWeather;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["D:\\weather\\src\\components\\DetailWeather.js"],"names":["React","Maps","location","name","props","city","lat","lng","lon","DetailWeather","createInfoWindow","bind","e","map","infoWindow","window","google","maps","InfoWindow","content","position","latLng","addListener","render","document","getElementById","open","center","zoom","marker","Marker","title","Component","App"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAO,WAAP;AAEA,IAAIC,QAAQ,GAAI;AACdC,EAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,IADH;AAEdC,EAAAA,GAAG,EAAE,KAAKF,KAAL,CAAWE,GAFF;AAGdC,EAAAA,GAAG,EAAE,KAAKH,KAAL,CAAWI;AAHF,CAAhB;;IAOMC,a;;;;;AAEF,2BAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,uDAAxB;AAFU;AAGX;;;;qCAEgBC,C,EAAGC,G,EAAK;AACvB,UAAMC,UAAU,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,UAAvB,CAAkC;AACjDC,QAAAA,OAAO,EAAE,yBADwC;AAEjDC,QAAAA,QAAQ,EAAE;AAAEd,UAAAA,GAAG,EAAEM,CAAC,CAACS,MAAF,CAASf,GAAT,EAAP;AAAuBC,UAAAA,GAAG,EAAEK,CAAC,CAACS,MAAF,CAASd,GAAT;AAA5B;AAFuC,OAAlC,CAAnB;AAIAO,MAAAA,UAAU,CAACQ,WAAX,CAAuB,UAAvB,EAAmC,UAAAV,CAAC,EAAI;AACtCW,QAAAA,MAAM,CAAC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAD,EAAiBC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAjB,CAAN;AACD,OAFD;AAGAX,MAAAA,UAAU,CAACY,IAAX,CAAgBb,GAAhB;AACD;AAEC;;;;6BACK;AAAA;;AACL,aACA;AAAK,QAAA,SAAS,EAAE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,GAAD;AACA,QAAA,EAAE,EAAC,OADH;AAEA,QAAA,OAAO,EAAE;AACTc,UAAAA,MAAM,EAAE;AAAErB,YAAAA,GAAG,EAAEJ,QAAQ,CAACI,GAAhB;AAAqBC,YAAAA,GAAG,EAAEL,QAAQ,CAACM;AAAnC,WADC;AAEToB,UAAAA,IAAI,EAAE;AAFG,SAFT;AAMA,QAAA,SAAS,EAAE,mBAAAf,GAAG,EAAI;AAClB,cAAMgB,MAAM,GAAG,IAAId,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBa,MAAvB,CAA8B;AACzCV,YAAAA,QAAQ,EAAE;AAAEd,cAAAA,GAAG,EAAEJ,QAAQ,CAACI,GAAhB;AAAqBC,cAAAA,GAAG,EAAEL,QAAQ,CAACM;AAAnC,aAD+B;AAEzCK,YAAAA,GAAG,EAAEA,GAFoC;AAGzCkB,YAAAA,KAAK,EAAE;AAHkC,WAA9B,CAAf;AAKAF,UAAAA,MAAM,CAACP,WAAP,CAAmB,OAAnB,EAA4B,UAAAV,CAAC,EAAI;AAC7B,YAAA,MAAI,CAACF,gBAAL,CAAsBE,CAAtB,EAAyBC,GAAzB;AACH,WAFD;AAGC,SAfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAmBC,KAAKT,KAAL,CAAWC,IAnBZ,CADA;AAuBH;;;;EA3CuBL,KAAK,CAACgC,S;;AA8ClC,eAAeC,GAAf","sourcesContent":["import React from 'react';\r\nimport Maps from \"./components/Maps\";\r\nimport \"./App.css\"\r\n\r\nvar location =  {\r\n  name: this.props.city,\r\n  lat: this.props.lat,\r\n  lng: this.props.lon\r\n};\r\n\r\n\r\nclass DetailWeather extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.createInfoWindow = this.createInfoWindow.bind(this)\r\n      }\r\n    \r\n      createInfoWindow(e, map) {\r\n        const infoWindow = new window.google.maps.InfoWindow({\r\n            content: '<div id=\"infoWindow\" />',\r\n            position: { lat: e.latLng.lat(), lng: e.latLng.lng() }\r\n        })\r\n        infoWindow.addListener('domready', e => {\r\n          render(<InfoWindow />, document.getElementById('infoWindow'))\r\n        })\r\n        infoWindow.open(map)\r\n      }\r\n    \r\n        /**use async to make htttp call very easy* */  \r\n    render() {         \r\n        return (\r\n        <div className =\"wrapper\" >\r\n            <Title />\r\n            <Map\r\n            id=\"myMap\"\r\n            options={{\r\n            center: { lat: location.lat, lng: location.lon },\r\n            zoom: 8\r\n            }}\r\n            onMapLoad={map => {\r\n            const marker = new window.google.maps.Marker({\r\n                position: { lat: location.lat, lng: location.lon },\r\n                map: map,\r\n                title: 'Hello Istanbul!'\r\n            });\r\n            marker.addListener('click', e => {\r\n                this.createInfoWindow(e, map)\r\n            })\r\n            }}\r\n        />      \r\n        {this.props.city}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}