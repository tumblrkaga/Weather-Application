{"ast":null,"code":"import _classCallCheck from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\weather\\\\src\\\\components\\\\Maps.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\n\nvar Maps =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Maps, _Component);\n\n  function Maps(_props) {\n    var _this;\n\n    _classCallCheck(this, Maps);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Maps).call(this, _props));\n    _this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n\n    _this.onMarkerClick = function (props, marker, e) {\n      return _this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    _this.onScriptLoad = _this.onScriptLoad.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Maps, [{\n    key: \"onScriptLoad\",\n    value: function onScriptLoad() {\n      var map = new window.google.maps.Map(document.getElementById(this.props.id), this.props.options);\n      this.props.onMapLoad(map);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (!window.google) {\n        var s = document.createElement('script');\n        s.type = 'text/javascript';\n        s.src = \"https://maps.google.com/maps/api/js?key=AIzaSyBMLw55hqb9mvJ5hYFpGoP5pyw0icBcmyA\";\n        var x = document.getElementsByTagName('script')[0];\n        x.parentNode.insertBefore(s, x); // Below is important. \n        //We cannot access google.maps until it's finished loading\n\n        s.addEventListener('load', function (e) {\n          _this2.onScriptLoad();\n        });\n      } else {\n        this.onScriptLoad();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: {\n          width: 500,\n          height: 500\n        },\n        id: this.props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Maps;\n}(Component);\n\nexport default Maps;","map":{"version":3,"sources":["D:\\weather\\src\\components\\Maps.js"],"names":["React","Component","render","Maps","props","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","e","setState","onScriptLoad","bind","map","window","google","maps","Map","document","getElementById","id","options","onMapLoad","s","createElement","type","src","x","getElementsByTagName","parentNode","insertBefore","addEventListener","width","height"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;;IAEMC,I;;;;;AAeJ,gBAAYC,MAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,MAAN;AADiB,UAbnBC,KAamB,GAbX;AACNC,MAAAA,iBAAiB,EAAE,KADb;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,aAAa,EAAE;AAHT,KAaW;;AAAA,UAPnBC,aAOmB,GAPH,UAACL,KAAD,EAAQM,MAAR,EAAgBC,CAAhB;AAAA,aAChB,MAAKC,QAAL,CAAc;AACZJ,QAAAA,aAAa,EAAEJ,KADH;AAEZG,QAAAA,YAAY,EAAEG,MAFF;AAGZJ,QAAAA,iBAAiB,EAAE;AAHP,OAAd,CADgB;AAAA,KAOG;;AAEjB,UAAKO,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AAFiB;AAGlB;;;;mCAEc;AACb,UAAMC,GAAG,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,GAAvB,CACVC,QAAQ,CAACC,cAAT,CAAwB,KAAKjB,KAAL,CAAWkB,EAAnC,CADU,EAEV,KAAKlB,KAAL,CAAWmB,OAFD,CAAZ;AAGA,WAAKnB,KAAL,CAAWoB,SAAX,CAAqBT,GAArB;AACD;;;wCAEmB;AAAA;;AAClB,UAAI,CAACC,MAAM,CAACC,MAAZ,EAAoB;AAClB,YAAIQ,CAAC,GAAGL,QAAQ,CAACM,aAAT,CAAuB,QAAvB,CAAR;AACAD,QAAAA,CAAC,CAACE,IAAF,GAAS,iBAAT;AACAF,QAAAA,CAAC,CAACG,GAAF;AACA,YAAIC,CAAC,GAAGT,QAAQ,CAACU,oBAAT,CAA8B,QAA9B,EAAwC,CAAxC,CAAR;AACAD,QAAAA,CAAC,CAACE,UAAF,CAAaC,YAAb,CAA0BP,CAA1B,EAA6BI,CAA7B,EALkB,CAMlB;AACA;;AACAJ,QAAAA,CAAC,CAACQ,gBAAF,CAAmB,MAAnB,EAA2B,UAAAtB,CAAC,EAAI;AAC9B,UAAA,MAAI,CAACE,YAAL;AACD,SAFD;AAGD,OAXD,MAWO;AACL,aAAKA,YAAL;AACD;AACF;;;6BAEQ;AACP,aACE;AAAK,QAAA,KAAK,EAAE;AAAEqB,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,MAAM,EAAE;AAAtB,SAAZ;AAAyC,QAAA,EAAE,EAAE,KAAK/B,KAAL,CAAWkB,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EAhDgBrB,S;;AAmDnB,eAAeE,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { render } from 'react-dom';\r\n\r\nclass Maps extends Component {\r\n\r\n  state = {\r\n    showingInfoWindow: false,\r\n    activeMarker: {},\r\n    selectedPlace: {},\r\n  };\r\n\r\n  onMarkerClick = (props, marker, e) =>\r\n  this.setState({\r\n    selectedPlace: props,\r\n    activeMarker: marker,\r\n    showingInfoWindow: true\r\n  });\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.onScriptLoad = this.onScriptLoad.bind(this)\r\n  }\r\n\r\n  onScriptLoad() {\r\n    const map = new window.google.maps.Map(\r\n      document.getElementById(this.props.id),\r\n      this.props.options);\r\n    this.props.onMapLoad(map)\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!window.google) {\r\n      var s = document.createElement('script');\r\n      s.type = 'text/javascript';\r\n      s.src = `https://maps.google.com/maps/api/js?key=AIzaSyBMLw55hqb9mvJ5hYFpGoP5pyw0icBcmyA`;\r\n      var x = document.getElementsByTagName('script')[0];\r\n      x.parentNode.insertBefore(s, x);\r\n      // Below is important. \r\n      //We cannot access google.maps until it's finished loading\r\n      s.addEventListener('load', e => {\r\n        this.onScriptLoad()\r\n      })\r\n    } else {\r\n      this.onScriptLoad()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: 500, height: 500 }} id={this.props.id} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Maps;\r\n\r\n"]},"metadata":{},"sourceType":"module"}