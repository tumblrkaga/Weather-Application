{"ast":null,"code":"import _classCallCheck from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\weather\\\\src\\\\App.js\";\nimport React from 'react';\nimport Title from \"./components/Title\";\nimport Maps from \"./components/Maps\";\nimport { InfoWindow } from \"google-maps-react\";\nvar infoWindow = new google.maps.InfoWindow({\n  content: React.createElement(MyComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }),\n  position: {\n    lat: 41,\n    lng: 28\n  }\n});\ninfoWindow.open(map);\nvar locations = [{\n  name: \"Nairobi\",\n  lat: -1.28333,\n  lng: 36.81667\n}, {\n  name: \"Bangalore\",\n  lat: 12.9716,\n  lng: 77.5946\n}, {\n  name: \"Stockholm\",\n  lat: 59.3293,\n  lng: 18.0686\n}];\nvar contentString = \"WHY\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.handleClick = function () {\n      alert(\"hi\");\n    };\n\n    _this.createInfoWindow = _this.createInfoWindow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"createInfoWindow\",\n    value: function createInfoWindow(e, map) {\n      var infoWindow = new window.google.maps.InfoWindow({\n        content: contentString,\n        position: new window.google.maps.LatLng(41.0082, 28.9784)\n      });\n      infoWindow.open(map);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Maps, {\n        id: \"myMap\",\n        options: {\n          center: {\n            lat: 38.9637,\n            lng: 35.2433\n          },\n          zoom: 2.5\n        },\n        onMapLoad: function onMapLoad(map) {\n          var markers = locations.map(function (location, i) {\n            return new window.google.maps.Marker({\n              position: location,\n              map: map,\n              animation: window.google.maps.Animation.DROP,\n              title: location.name,\n              icon: \"https://c.tadst.com/gfx/w//40/wt-33.png\"\n            });\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), \"this.InfoWindow()\"));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["D:\\weather\\src\\App.js"],"names":["React","Title","Maps","InfoWindow","infoWindow","google","maps","content","position","lat","lng","open","map","locations","name","contentString","App","handleClick","alert","createInfoWindow","bind","e","window","LatLng","center","zoom","markers","location","i","Marker","animation","Animation","DROP","title","icon","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nimport Title from \"./components/Title\";\nimport Maps from \"./components/Maps\";\nimport {InfoWindow} from \"google-maps-react\";\n\nconst infoWindow = new google.maps.InfoWindow({\n  content : <MyComponent />,\n  position : { lat : 41, lng : 28 }\n})\ninfoWindow.open(map);  \n\nvar locations = [{\n  name: \"Nairobi\",\n  lat: -1.28333,\n  lng: 36.81667\n}, {\n  name: \"Bangalore\",\n  lat: 12.9716,\n  lng: 77.5946\n}, {\n  name: \"Stockholm\",\n  lat: 59.3293,\n  lng: 18.0686\n}];\n\nvar contentString = \"WHY\"\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.createInfoWindow = this.createInfoWindow.bind(this)\n  }\n\n  handleClick = () => {\n    alert(\"hi\");\n  } \n  createInfoWindow(e, map) {\n    const infoWindow = new window.google.maps.InfoWindow({\n        content: contentString,\n        position: new window.google.maps.LatLng(41.0082,28.9784)\n        \n        \n    })\n    infoWindow.open(map)\n  }\n \n\n  render() {    \n    \n    return (\n      <div>\n        <Title />\n        <div>\n          <Maps\n            id=\"myMap\"\n            options={{\n              center: { \n                lat: 38.9637,\n                lng: 35.2433 },\n              zoom: 2.5\n            }}\n            onMapLoad={map => {\n              var markers = locations.map(function (location, i) {\n                return new window.google.maps.Marker({\n                  position: location,\n                  map:map,\n                  animation: window.google.maps.Animation.DROP,\n                  title : location.name,\n                  icon: \"https://c.tadst.com/gfx/w//40/wt-33.png\"\n                });\n              });\n            }}\n          \n          />\n          this.InfoWindow()\n        </div>\n        \n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}