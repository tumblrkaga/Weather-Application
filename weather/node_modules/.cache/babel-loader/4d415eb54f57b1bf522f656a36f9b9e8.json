{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\weather\\\\src\\\\components\\\\CityWeather.js\";\nimport React from \"react\";\nimport Precautions from \"./Precautions\";\nimport DetailMap from \"./DetailMap\";\nimport { Link } from \"react-router-dom\";\nvar API_KEY = \"82e89009629e31d94b5e0e6bc9b6533b\";\n\nvar CityWeather =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CityWeather, _React$Component);\n\n  function CityWeather() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CityWeather);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CityWeather)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      temperature: undefined,\n      lowest_temp: undefined,\n      highest_temp: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      main: undefined,\n      lat: undefined,\n      long: undefined\n    };\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var city, api_call, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              city = _this.props.location.state.city;\n              _context.next = 3;\n              return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n\n            case 3:\n              api_call = _context.sent;\n              _context.next = 6;\n              return api_call.json();\n\n            case 6:\n              data = _context.sent;\n              console.log(data);\n\n              if (city) {\n                _this.setState({\n                  temperature: data.main.temp,\n                  lowest_temp: data.main.temp_min,\n                  highest_temp: data.main.temp_max,\n                  city: data.name,\n                  country: data.sys.country,\n                  humidity: data.main.humidity,\n                  description: data.weather[0].description,\n                  main: data.weather[0].main,\n                  lat: data.coord.lat,\n                  lon: data.coord.lon\n                });\n              } else {\n                _this.setState({\n                  temperature: undefined,\n                  lowest_temp: undefined,\n                  highest_temp: undefined,\n                  city: undefined,\n                  country: undefined,\n                  humidity: undefined,\n                  description: undefined,\n                  main: undefined,\n                  lat: undefined,\n                  long: undefined\n                });\n              }\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _this;\n  }\n\n  _createClass(CityWeather, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"detail_wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"detail-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"logo\",\n        src: \"https://www.truecaller.com/img/truecaller-logo-blue.959ba34.png\",\n        height: \"42\",\n        width: \"80\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://img.icons8.com/color/48/000000/facebook.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), \" \"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://img.icons8.com/color/48/000000/linkedin.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), \" \"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://img.icons8.com/color/48/000000/twitter.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })))), this.state.city && React.createElement(\"p\", {\n        className: \"weather__key\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), \"\\xA0 \\xA0  \\xA0  \\xA0  \\xA0  \\xA0\\xA0  \\xA0  \\xA0 \\xA0  \\xA0  \\xA0Location:\", React.createElement(\"span\", {\n        className: \"weather__value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"  \", this.state.city, \", \", this.state.country)), this.state.temperature && React.createElement(\"p\", {\n        className: \"weather__key\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"\\xA0 \\xA0  \\xA0  \\xA0  \\xA0  \\xA0\\xA0  \\xA0  \\xA0 \\xA0  \\xA0  \\xA0Current Temperature:\", React.createElement(\"span\", {\n        className: \"weather__value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \" \", this.state.temperature, \" \\xB0C \")), this.state.lowest_temp && React.createElement(\"p\", {\n        className: \"weather__key\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"\\xA0 \\xA0  \\xA0  \\xA0  \\xA0  \\xA0\\xA0  \\xA0  \\xA0 \\xA0  \\xA0  \\xA0Minimum Temperature:\", React.createElement(\"span\", {\n        className: \"weather__value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \" \", this.state.lowest_temp, \" \\xB0C \")), this.state.highest_temp && React.createElement(\"p\", {\n        className: \"weather__key\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"\\xA0 \\xA0  \\xA0  \\xA0  \\xA0  \\xA0\\xA0  \\xA0  \\xA0 \\xA0  \\xA0  \\xA0Maximum Temperature:\", React.createElement(\"span\", {\n        className: \"weather__value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \" \", this.state.highest_temp, \" \\xB0C \")), this.state.humidity && React.createElement(\"p\", {\n        className: \"weather__key\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"\\xA0 \\xA0  \\xA0  \\xA0  \\xA0  \\xA0\\xA0  \\xA0  \\xA0 \\xA0  \\xA0  \\xA0Humidity:\", React.createElement(\"span\", {\n        className: \"weather__value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \" \", this.state.humidity, \"%\")), this.state.description && React.createElement(\"p\", {\n        className: \"weather__key\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"\\xA0 \\xA0  \\xA0  \\xA0  \\xA0  \\xA0\\xA0  \\xA0  \\xA0 \\xA0  \\xA0  \\xA0Conditions:\", React.createElement(\"span\", {\n        className: \"weather__value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \" \", this.state.description, \" \"))), React.createElement(DetailMap, {\n        className: \"map\",\n        lat: this.state.lat,\n        lon: this.state.lon,\n        city: this.state.city,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(Precautions, {\n        main: this.state.main,\n        temperature: this.state.temperature,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Go Home\")));\n    }\n  }]);\n\n  return CityWeather;\n}(React.Component);\n\nexport default CityWeather;","map":{"version":3,"sources":["D:\\weather\\src\\components\\CityWeather.js"],"names":["React","Precautions","DetailMap","Link","API_KEY","CityWeather","state","temperature","undefined","lowest_temp","highest_temp","city","country","humidity","description","main","lat","long","componentDidMount","props","location","fetch","api_call","json","data","console","log","setState","temp","temp_min","temp_max","name","sys","weather","coord","lon","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Precautions from \"./Precautions\";\r\nimport DetailMap from \"./DetailMap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst API_KEY = \"82e89009629e31d94b5e0e6bc9b6533b\";\r\n\r\n\r\nclass CityWeather extends React.Component {\r\n\r\n    state = {\r\n        temperature : undefined,\r\n        lowest_temp: undefined,\r\n        highest_temp: undefined,\r\n\t\tcity : undefined,\r\n\t\tcountry : undefined,\r\n\t\thumidity : undefined,\r\n\t\tdescription : undefined,\r\n        main :undefined,\r\n        lat : undefined,\r\n        long : undefined\r\n    }\t\r\n  \r\n    componentDidMount = async () => {        \r\n        const city = this.props.location.state.city;\r\n\t\tconst api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\r\n\t \tconst data = await api_call.json();\r\n\t \tconsole.log(data);\r\n\t \tif (city){\r\n\t \t\tthis.setState({\r\n            temperature : data.main.temp,\r\n            lowest_temp: data.main.temp_min,\r\n            highest_temp: data.main.temp_max,\r\n\t \t\tcity : data.name,\r\n\t \t\tcountry : data.sys.country,\r\n\t\t\thumidity : data.main.humidity,\r\n            description : data.weather[0].description,\r\n            main : data.weather[0].main,\r\n            lat : data.coord.lat,\r\n            lon : data.coord.lon\r\n\t \t});\r\n\r\n\t \t} else {\r\n\t \t\tthis.setState({\r\n            temperature : undefined,\r\n            lowest_temp: undefined,\r\n            highest_temp: undefined,\r\n\t \t\tcity : undefined,\r\n\t \t\tcountry : undefined,\r\n\t\t\thumidity : undefined,\r\n            description : undefined,\r\n            main: undefined,\r\n            lat : undefined,\r\n            long :undefined\r\n\t\t\t});\r\n\r\n\t \t}\r\n\t \t\r\n\t}\r\n    render(){\r\n        return(   \r\n        <div className=\"detail_wrapper\" >\r\n                <div className=\"detail-container\"> \r\n                    <br></br>\r\n                    <header>\r\n                        <img className=\"logo\" src=\"https://www.truecaller.com/img/truecaller-logo-blue.959ba34.png\"   height=\"42\" width=\"80\"/>\r\n                            <ul className=\"menu\">\r\n                                <li><img src=\"https://img.icons8.com/color/48/000000/facebook.png\"/> </li>\r\n                                <li><img src=\"https://img.icons8.com/color/48/000000/linkedin.png\"/> </li>\r\n                                <li><img src=\"https://img.icons8.com/color/48/000000/twitter.png\"/></li>\r\n                            </ul>\r\n                    </header>\r\n                    {\t\r\n                        this.state.city && \r\n                        <p className=\"weather__key\"   > <br></br>\r\n                            &nbsp; &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;&nbsp;  &nbsp;  &nbsp; &nbsp;  &nbsp;  &nbsp;Location: \r\n                            <span className= \"weather__value\"  >  { this.state.city }, { this.state.country }</span>\r\n                        </p> \r\n                    }            \r\n                    { \t\r\n                        this.state.temperature && \r\n                        <p className=\"weather__key\"   >\r\n                            &nbsp; &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;&nbsp;  &nbsp;  &nbsp; &nbsp;  &nbsp;  &nbsp;Current Temperature: \r\n                            <span className= \"weather__value\"   > { this.state.temperature} &deg;C\t</span>\r\n                        </p> \r\n                    }\r\n                    \r\n                    { \t\r\n                        this.state.lowest_temp &&\r\n                        <p className=\"weather__key\"    >\r\n                            &nbsp; &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;&nbsp;  &nbsp;  &nbsp; &nbsp;  &nbsp;  &nbsp;Minimum Temperature: \r\n                            <span className= \"weather__value\"  > { this.state.lowest_temp } &deg;C\t</span>\r\n                        </p> \r\n                    }\r\n                    { \t\r\n                        this.state.highest_temp && \r\n                        <p className=\"weather__key\"    >\r\n                            &nbsp; &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;&nbsp;  &nbsp;  &nbsp; &nbsp;  &nbsp;  &nbsp;Maximum Temperature: \r\n                            <span className= \"weather__value\"  > { this.state.highest_temp} &deg;C\t</span>\r\n                        </p> \r\n                    }\r\n                    \r\n                    { \t\r\n                        this.state.humidity && \r\n                        <p className=\"weather__key\"   >\r\n                            &nbsp; &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;&nbsp;  &nbsp;  &nbsp; &nbsp;  &nbsp;  &nbsp;Humidity: \r\n                            <span className= \"weather__value\" > { this.state.humidity }%</span>\r\n                        </p> \r\n                    }\r\n                    { \t\r\n                        this.state.description && \r\n                        <p className=\"weather__key\"   > \r\n                            &nbsp; &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;&nbsp;  &nbsp;  &nbsp; &nbsp;  &nbsp;  &nbsp;Conditions: \r\n                            <span className= \"weather__value\"> {  this.state.description} </span>\r\n                        </p> \r\n                    }   \r\n                \r\n                </div>\r\n                <DetailMap className=\"map\" \r\n                    lat= {this.state.lat}\r\n                    lon= {this.state.lon}\r\n                    city ={this.state.city}  \r\n                />                  \r\n                <Precautions \r\n                    main={this.state.main}\r\n                    temperature = {this.state.temperature}\r\n                />   \r\n                <button className=\"button\" >\r\n                    <Link to = \"/\" >\r\n                    Go Home\r\n                    </Link>\r\n                </button>  \r\n        </div>\r\n       );\r\n    }\r\n}\r\n\r\n\r\nexport default CityWeather;"]},"metadata":{},"sourceType":"module"}