{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\weather\\\\src\\\\components\\\\Cards.jsx\";\nimport React, { Component } from \"react\";\nimport Card from \"./CardUi\";\nimport stockholm from \"../img/stockholm.PNG\";\nimport bangalore from \"../img/bangalore.PNG\";\nimport nairobi from \"../img/nairobi.PNG\";\nvar API_KEY = \"82e89009629e31d94b5e0e6bc9b6533b\";\n\nvar Cards =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Cards, _React$Component);\n\n  function Cards() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Cards);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Cards)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeTemp: []\n    };\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var cities, city_temp, i, req, temperature;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              cities = [\"Bangalore\", \"Nairobi\", \"Stockholm\"];\n              city_temp = [];\n              i = 0;\n\n            case 3:\n              if (!(i < cities.length)) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 6;\n              return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(cities[i], \"&appid=\").concat(API_KEY, \"&units=metric\"));\n\n            case 6:\n              req = _context.sent;\n              _context.next = 9;\n              return req.json();\n\n            case 9:\n              temperature = _context.sent;\n              city_temp.push(temperature.main.temp);\n\n            case 11:\n              i++;\n              _context.next = 3;\n              break;\n\n            case 14:\n              _this.setState({\n                activeTemp: city_temp\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _this;\n  }\n\n  _createClass(Cards, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container-fluid d-flex justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Card, {\n        imgsrc: bangalore,\n        title: this.state.activeTemp[0],\n        subtitle: \"Bangalore, India\",\n        gist: \"Bengaluru is the capital of India's  Karnataka state.The center of India's high-tech industry, and known for its parks.\",\n        link: {\n          pathname: \"/temp/bangalore\",\n          state: {\n            city: \"bangalore\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Card, {\n        imgsrc: nairobi,\n        title: this.state.activeTemp[1],\n        subtitle: \"Nairobi, Kenya\",\n        gist: \"Nairobi is Kenya\\u2019s capital city.Nairobi is also often used as a jumping-off point for safari trips elsewhere in Kenya.\",\n        link: {\n          pathname: \"/temp/naironi\",\n          state: {\n            city: \"nairobi\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Card, {\n        imgsrc: stockholm,\n        title: this.state.activeTemp[2],\n        subtitle: \"Stockholm, Sweden\",\n        gist: \"Stockholm, the capital of Sweden, encompasses 14 islands on an extensive Baltic Sea archipelago.\",\n        link: {\n          pathname: \"/temp/stockholm\",\n          state: {\n            city: \"stockholm\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Cards;\n}(React.Component);\n\nexport default Cards;","map":{"version":3,"sources":["D:\\weather\\src\\components\\Cards.jsx"],"names":["React","Component","Card","stockholm","bangalore","nairobi","API_KEY","Cards","state","activeTemp","componentDidMount","cities","city_temp","i","length","fetch","req","json","temperature","push","main","temp","setState","pathname","city"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\r\nimport Card from \"./CardUi\";\r\nimport stockholm from \"../img/stockholm.PNG\";\r\nimport bangalore from \"../img/bangalore.PNG\";\r\nimport nairobi from \"../img/nairobi.PNG\";\r\n\r\n\r\nconst API_KEY = \"82e89009629e31d94b5e0e6bc9b6533b\";\r\n\r\nclass Cards extends React.Component {\r\n    /**use async to make htttp call very easy* */\r\n    state = {\r\n        activeTemp:[]\r\n      }\r\n\r\n    componentDidMount = async () => {    \r\n    var cities = [\"Bangalore\", \"Nairobi\", \"Stockholm\"];\r\n    var city_temp = [];\r\n    for(var i=0;i<cities.length;i++){\r\n        // push the component to elements!\r\n        const req = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${cities[i]}&appid=${API_KEY}&units=metric`);\r\n        const temperature = await req.json();\r\n        city_temp.push( temperature.main.temp )\r\n    }     \r\n    this.setState({activeTemp:city_temp});\r\n    }\r\n\r\n    render() {         \r\n    return (\r\n        <div className=\"container-fluid d-flex justify-content-center\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <Card   imgsrc={bangalore} \r\n                            title={this.state.activeTemp[0]}  \r\n                            subtitle = \"Bangalore, India\"\r\n                            gist=\"Bengaluru is the capital of India's  Karnataka state.The center of India's high-tech industry, and known for its parks.\" \r\n                            link={{ pathname: `/temp/bangalore`, state :{city:\"bangalore\"} }}  \r\n                    />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <Card   imgsrc={nairobi}  \r\n                            title={this.state.activeTemp[1]} \r\n                            subtitle = \"Nairobi, Kenya\" \r\n                            gist = \"Nairobi is Kenya’s capital city.Nairobi is also often used as a jumping-off point for safari trips elsewhere in Kenya.\"\r\n                            link={{ pathname: `/temp/naironi`, state :{city:\"nairobi\"} }}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <Card   imgsrc={stockholm}  \r\n                            title= {this.state.activeTemp[2]} \r\n                            subtitle = \"Stockholm, Sweden\"\r\n                            gist = \"Stockholm, the capital of Sweden, encompasses 14 islands on an extensive Baltic Sea archipelago.\"\r\n                            link={{ pathname: `/temp/stockholm`, state :{city:\"stockholm\"} }}  \r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Cards;"]},"metadata":{},"sourceType":"module"}