{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\weather\\\\src\\\\components\\\\CityWeather.js\";\nimport React from \"react\";\nvar API_KEY = \"82e89009629e31d94b5e0e6bc9b6533b\";\n\nvar CityWeather =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CityWeather, _React$Component);\n\n  function CityWeather() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CityWeather);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CityWeather)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeCity: []\n    };\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var city, request, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              city = _this.props.location.state.city;\n              _context.next = 3;\n              return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n\n            case 3:\n              request = _context.sent;\n              _context.next = 6;\n              return request.json();\n\n            case 6:\n              response = _context.sent;\n              console.log(response);\n\n              _this.setState({\n                activeCity: response\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _this;\n  }\n\n  _createClass(CityWeather, [{\n    key: \"render\",\n    value: function render() {\n      var city = this.state.activeCity;\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, city.city && city.country && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \" Location:\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \" \", city.city, \", \", city.country)), city.temperature && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \" Temperature:\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \" \", city.temperature, \" \")), city.humidity && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \" Humidity:\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \" \", city.humidity, \" \")), city.description && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \" Conditions:\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \" \", city.description, \" \")), city.error && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, city.error));\n    }\n  }]);\n\n  return CityWeather;\n}(React.Component);\n\nexport default CityWeather;","map":{"version":3,"sources":["D:\\weather\\src\\components\\CityWeather.js"],"names":["React","API_KEY","CityWeather","state","activeCity","componentDidMount","city","props","location","fetch","request","json","response","console","log","setState","country","temperature","humidity","description","error","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,OAAO,GAAG,kCAAhB;;IAEMC,W;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,UAAU,EAAG;AADT,K;UAGRC,iB;;;;6BAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEVC,cAAAA,IAFU,GAEH,MAAKC,KAAL,CAAWC,QAAX,CAAoBL,KAApB,CAA0BG,IAFvB;AAAA;AAAA,qBAGMG,KAAK,4DAAqDH,IAArD,oBAAmEL,OAAnE,mBAHX;;AAAA;AAGVS,cAAAA,OAHU;AAAA;AAAA,qBAIOA,OAAO,CAACC,IAAR,EAJP;;AAAA;AAIVC,cAAAA,QAJU;AAKhBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,oBAAKG,QAAL,CAAc;AAACX,gBAAAA,UAAU,EAAGQ;AAAd,eAAd;;AANgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;6BAQZ;AACJ,UAAMN,IAAI,GAAG,KAAKH,KAAL,CAAWC,UAAxB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEID,IAAI,CAACA,IAAL,IAAaA,IAAI,CAACU,OAAlB,IAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAWV,IAAI,CAACA,IAAhB,QAA0BA,IAAI,CAACU,OAA/B,CADyB,CAFjC,EAOIV,IAAI,CAACW,WAAL,IAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAWX,IAAI,CAACW,WAAhB,MADgB,CAPxB,EAYIX,IAAI,CAACY,QAAL,IAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAWZ,IAAI,CAACY,QAAhB,MADa,CAZrB,EAiBIZ,IAAI,CAACa,WAAL,IAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAWb,IAAI,CAACa,WAAhB,MADgB,CAjBxB,EAsBIb,IAAI,CAACc,KAAL,IAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMd,IAAI,CAACc,KAAX,CAtBlB,CADJ;AA2BH;;;;EA1CqBpB,KAAK,CAACqB,S;;AA6ChC,eAAenB,WAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst API_KEY = \"82e89009629e31d94b5e0e6bc9b6533b\";\r\n\r\nclass CityWeather extends React.Component {\r\n    state = {\r\n        activeCity : []\r\n    }\r\n    componentDidMount = async () =>{\r\n\r\n        const city = this.props.location.state.city;\r\n        const request = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\r\n        const response = await request.json();\r\n        console.log(response);\r\n        this.setState({activeCity : response})\r\n    }\r\n    render(){\r\n        const city = this.state.activeCity;\r\n        console.log(this.props);\r\n        return(            \r\n            <div>\r\n            {\t\r\n                city.city && city.country && <p  > Location: \r\n                    <span  > { city.city }, { city.country }</span>\r\n                </p> \r\n            }\r\n            { \t\r\n                city.temperature && <p  > Temperature: \r\n                    <span  > { city.temperature }\t</span>\r\n                </p> \r\n            }\r\n            { \t\r\n                city.humidity && <p  > Humidity: \r\n                    <span  > { city.humidity } </span>\r\n                </p> \r\n            }\r\n            { \t\r\n                city.description && <p  > Conditions: \r\n                    <span  > { city.description } </span>\r\n            </p> \r\n            }\r\n            { \r\n                city.error && <p >{ city.error }</p>  \r\n            }\r\n            </div>\r\n       );\r\n    }\r\n}\r\n\r\nexport default CityWeather;"]},"metadata":{},"sourceType":"module"}