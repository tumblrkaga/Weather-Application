{"ast":null,"code":"import _classCallCheck from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\weather\\\\src\\\\components\\\\Maps.js\";\nimport React from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nvar style = {\n  width: '100%',\n  height: '100%'\n};\nvar points = [{\n  lat: 42.02,\n  lng: -77.01\n}, {\n  lat: 42.03,\n  lng: -77.02\n}, {\n  lat: 41.03,\n  lng: -77.04\n}, {\n  lat: 42.05,\n  lng: -77.02\n}];\nvar bounds = new this.props.google.maps.LatLngBounds();\n\nfor (var i = 0; i < points.length; i++) {\n  bounds.extend(points[i]);\n}\n\nvar MapContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MapContainer, _React$Component);\n\n  function MapContainer() {\n    _classCallCheck(this, MapContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MapContainer).apply(this, arguments));\n  }\n\n  _createClass(MapContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Map, {\n        google: this.props.google,\n        onReady: this.fetchPlaces,\n        visible: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Listing, {\n        places: this.state.places,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MapContainer;\n}(React.Component);\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyBMLw55hqb9mvJ5hYFpGoP5pyw0icBcmyA\"\n})(MapContainer);","map":{"version":3,"sources":["D:\\weather\\src\\components\\Maps.js"],"names":["React","Map","InfoWindow","Marker","GoogleApiWrapper","style","width","height","points","lat","lng","bounds","props","google","maps","LatLngBounds","i","length","extend","MapContainer","fetchPlaces","state","places","Component","apiKey"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,UAAb,EAAyBC,MAAzB,EAAiCC,gBAAjC,QAAwD,mBAAxD;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE,MADK;AAEZC,EAAAA,MAAM,EAAE;AAFI,CAAd;AAIA,IAAIC,MAAM,GAAG,CACX;AAAEC,EAAAA,GAAG,EAAE,KAAP;AAAcC,EAAAA,GAAG,EAAE,CAAC;AAApB,CADW,EAEX;AAAED,EAAAA,GAAG,EAAE,KAAP;AAAcC,EAAAA,GAAG,EAAE,CAAC;AAApB,CAFW,EAGX;AAAED,EAAAA,GAAG,EAAE,KAAP;AAAcC,EAAAA,GAAG,EAAE,CAAC;AAApB,CAHW,EAIX;AAAED,EAAAA,GAAG,EAAE,KAAP;AAAcC,EAAAA,GAAG,EAAE,CAAC;AAApB,CAJW,CAAb;AAMA,IAAIC,MAAM,GAAG,IAAI,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,IAAlB,CAAuBC,YAA3B,EAAb;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,MAAM,CAACS,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACxCL,EAAAA,MAAM,CAACO,MAAP,CAAcV,MAAM,CAACQ,CAAD,CAApB;AACC;;IAEKG,Y;;;;;;;;;;;;;6BACK;AACP,aACE,oBAAC,GAAD;AAAK,QAAA,MAAM,EAAE,KAAKP,KAAL,CAAWC,MAAxB;AACE,QAAA,OAAO,EAAE,KAAKO,WADhB;AAEE,QAAA,OAAO,EAAE,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,OAAD;AAAS,QAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADF;AAOD;;;;EATwBtB,KAAK,CAACuB,S;;AAYjC,eAAenB,gBAAgB,CAAC;AAC9BoB,EAAAA,MAAM,EAAG;AADqB,CAAD,CAAhB,CAEZL,YAFY,CAAf","sourcesContent":["import React from 'react';\r\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\r\n\r\nconst style = {\r\n  width: '100%',\r\n  height: '100%'\r\n}\r\nvar points = [\r\n  { lat: 42.02, lng: -77.01 },\r\n  { lat: 42.03, lng: -77.02 },\r\n  { lat: 41.03, lng: -77.04 },\r\n  { lat: 42.05, lng: -77.02 }\r\n]\r\nvar bounds = new this.props.google.maps.LatLngBounds();\r\nfor (var i = 0; i < points.length; i++) {\r\nbounds.extend(points[i]);\r\n}\r\n \r\nclass MapContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <Map google={this.props.google}\r\n        onReady={this.fetchPlaces}\r\n        visible={false}>\r\n          <Listing places={this.state.places} />\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n \r\nexport default GoogleApiWrapper({\r\n  apiKey: (\"AIzaSyBMLw55hqb9mvJ5hYFpGoP5pyw0icBcmyA\")\r\n})(MapContainer)\r\n"]},"metadata":{},"sourceType":"module"}